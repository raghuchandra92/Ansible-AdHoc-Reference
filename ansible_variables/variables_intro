#Ansible supports variables that can be used to store values that can be reused throughout files in an entire Ansible project. 
#This can help simplify creation and maintenance of a project and reduce the incidence of errors
#Variables provide a convenient way to manage dynamic values for a given environment in Ansible project. 

#Some examples of values that variables might contain include
• Users to create
• Packages to install
• Services to restart
• Files to remove
• Archives to retrieve from the Internet

#Variables have names which consist of a string that must start with a letter,can only have letters, numbers, and underscores

#Variables can be defined in a bewildering variety of places in an Ansible project. However, this can be simplified to 
#three basic scope levels:
• Global scope: Variables set from the command line or Ansible configuration
• Play scope: Variables set in the play and related structures
• Host scope: Variables set on host groups and individual hosts by the inventory, fact gathering, or registered tasks

#If the same variable name is defined at more than one level, the higher wins. So variables defined by the inventory are 
#overridden by variables defined by the playbook, which are overridden by variables defined on the command line.

#Playbook variables can be defined in multiple ways. 
#One of the simplest is to place it in a vars block at the beginning of a playbook.
      - hosts: all
             vars:
               user: admin
               home: /home/admin

#It is also possible to define playbook variables in external files.
#In this case, instead of using vars, the vars_files directive may be used
            - hosts: all
                vars_files:
                  - vars/users.yml
                  
#After the variables have been declared, administrators can use the variables in tasks. 
#Variables are referenced by placing the variable name in double curly braces. 
#Ansible substitutes the variable with its value when the task is executed.







#When a variable is used as the first element to start a value, quotes are mandatory.
#This prevents Ansible from considering the variable as starting a YAML dictionary.
   vars:
      user: admin
   tasks:
      # This line will read: Creates the user admin
      - name: Creates the user {{ user }}
   user:
      # This line will create the user named admin
      name: "{{ user }}"
      
  
